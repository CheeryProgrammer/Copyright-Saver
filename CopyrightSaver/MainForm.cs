/*
 Представленный способ защиты сообщения копирайта основан на том,
 что текст сообщения не записан в коде в текстовом виде, таким образом,
 при просмотре содержимого исполняемого файла в текстовом редакторе найти
 месторасположение сообщения копирайта будет невозможно.

 Текст копирайта зашифрован в массиве битов с использованием кодировки UTF-8.

 Благодаря наличию контрольного массива битов, обеспечивается дополнительный
 уровень защиты от вмешательства извне.
 
 */

using System;
using System.Collections;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace CopyrightSaver
{
	public partial class MainForm : Form
	{
		// Инициализируем массив битов, кодирующих сообщение копирайта в кодировке UTF-8
		// Сообщение копирайта: '© Copyright Voroshilin S.V.'
		private static readonly bool[] _copyrightLabel = new[]
		{
			0,1,0,0,0,0,1,1, 1,0,0,1,0,1,0,1, 0,0,0,0,0,1,0,0, 1,1,0,0,0,0,1,0,
			1,1,1,1,0,1,1,0, 0,0,0,0,1,1,1,0, 1,0,0,1,1,1,1,0, 0,1,0,0,1,1,1,0,
			1,0,0,1,0,1,1,0, 1,1,1,0,0,1,1,0, 0,0,0,1,0,1,1,0, 0,0,1,0,1,1,1,0,
			0,0,0,0,0,1,0,0, 0,1,1,0,1,0,1,0, 1,1,1,1,0,1,1,0, 0,1,0,0,1,1,1,0,
			1,1,1,1,0,1,1,0, 1,1,0,0,1,1,1,0, 0,0,0,1,0,1,1,0, 1,0,0,1,0,1,1,0,
			0,0,1,1,0,1,1,0, 1,0,0,1,0,1,1,0, 0,1,1,1,0,1,1,0, 0,0,0,0,0,1,0,0,
			1,1,0,0,1,0,1,0, 0,1,1,1,0,1,0,0, 0,1,1,0,1,0,1,0, 0,1,1,1,0,1,0,0,
		}.Select(bit => bit == 1).ToArray();

		// Инициализируем массив контрольных битов, представляющих собой инвертированный
		// массив битов копирайта
		private static readonly bool[] _controlBits = new[]
		{
			1,0,1,1,1,1,0,0, 0,1,1,0,1,0,1,0, 1,1,1,1,1,0,1,1, 0,0,1,1,1,1,0,1,
			0,0,0,0,1,0,0,1, 1,1,1,1,0,0,0,1, 0,1,1,0,0,0,0,1, 1,0,1,1,0,0,0,1,
			0,1,1,0,1,0,0,1, 0,0,0,1,1,0,0,1, 1,1,1,0,1,0,0,1, 1,1,0,1,0,0,0,1,
			1,1,1,1,1,0,1,1, 1,0,0,1,0,1,0,1, 0,0,0,0,1,0,0,1, 1,0,1,1,0,0,0,1,
			0,0,0,0,1,0,0,1, 0,0,1,1,0,0,0,1, 1,1,1,0,1,0,0,1, 0,1,1,0,1,0,0,1,
			1,1,0,0,1,0,0,1, 0,1,1,0,1,0,0,1, 1,0,0,0,1,0,0,1, 1,1,1,1,1,0,1,1,
			0,0,1,1,0,1,0,1, 1,0,0,0,1,0,1,1, 1,0,0,1,0,1,0,1, 1,0,0,0,1,0,1,1,
		}.Select(bit => bit == 1).ToArray();

		public MainForm()
		{
			InitializeComponent();
		}

		private void MainForm_Load(object sender, EventArgs e)
		{
			// Выодим сообщение копирайта в label главного окна программы
			ShowCopyright();

			// Если проверка не прошла успешно, показываем сообщение о том,
			// что программа запущена в демо-режиме
			if (!IsLabelValid())
				MessageBox.Show("Program started in demo mode");
		}

		// Метод декодирует и выводит сообщение копирайта в label главного окна
		private void ShowCopyright()
		{
			// Преобразуем массив битов копирайта в массив байтов
			var bits = new BitArray(_copyrightLabel);
			var bytes = new byte[bits.Length/8];
			bits.CopyTo(bytes, 0);

			// Декодируем строку копирайта из массива байтов с использованием кодировки UTF-8
			// и выводим в label главного окна
			lblCopyright.Text = Encoding.UTF8.GetString(bytes);
		}

		// Метод проверяет целостность сообщения копирайта
		private bool IsLabelValid()
		{
			var label = new BitArray(_copyrightLabel);
			var validator = new BitArray(_controlBits);

			// Если длина массивов окажется разной, данные были изменены, возвращаем false
			if (label.Length != validator.Length)
				return false;

			// Если данные не были повреждены, все биты массива xor будут 1
			var xor = label.Xor(validator);

			// Если длина массива битов окажется нулевой, значит, данные были изменены извне,
			// и мы возвращаем false
			if (xor.Length == 0)
				return false;

			// Если после операции XOR проверяемого и контрольного массивов битов
			// хотя бы один из битов результата окажется false, значит, данные были изменены извне,
			// и мы возвращаем false
			for (int i = 0; i < xor.Length; i++)
				if(!xor[i])
					return false;

			// Проверка прошла успешно
			return true;
		}
	}
}
